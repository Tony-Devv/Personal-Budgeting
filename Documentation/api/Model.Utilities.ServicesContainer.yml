### YamlMime:ManagedReference
items:
- uid: Model.Utilities.ServicesContainer
  commentId: T:Model.Utilities.ServicesContainer
  id: ServicesContainer
  parent: Model.Utilities
  children:
  - Model.Utilities.ServicesContainer.GetService``1
  - Model.Utilities.ServicesContainer.Instance
  langs:
  - csharp
  - vb
  name: ServicesContainer
  nameWithType: ServicesContainer
  fullName: Model.Utilities.ServicesContainer
  type: Class
  source:
    remote:
      path: Model/Utilities/ServicesContainer.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: ServicesContainer
    path: ../Model/Utilities/ServicesContainer.cs
    startLine: 20
  assemblies:
  - Model
  namespace: Model.Utilities
  summary: Provides a centralized service locator pattern implementation for dependency management.
  remarks: >-
    This class serves as an alternative to traditional dependency injection frameworks, 

    implementing the dependency inversion principle by decoupling service instantiation 

    from service usage. It acts as a lightweight IoC container that registers and 

    provides access to various application services.


    The container is implemented as a thread-safe singleton, ensuring only one instance 

    exists throughout the application lifecycle. Services are lazily instantiated when 

    first requested.
  example: []
  syntax:
    content: public class ServicesContainer
    content.vb: Public Class ServicesContainer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Utilities.ServicesContainer.Instance
  commentId: P:Model.Utilities.ServicesContainer.Instance
  id: Instance
  parent: Model.Utilities.ServicesContainer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ServicesContainer.Instance
  fullName: Model.Utilities.ServicesContainer.Instance
  type: Property
  source:
    remote:
      path: Model/Utilities/ServicesContainer.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: Instance
    path: ../Model/Utilities/ServicesContainer.cs
    startLine: 53
  assemblies:
  - Model
  namespace: Model.Utilities
  summary: Gets the singleton instance of the services container.
  example: []
  syntax:
    content: public static ServicesContainer Instance { get; }
    parameters: []
    return:
      type: Model.Utilities.ServicesContainer
      description: The single instance of ServicesContainer that exists in the application.
    content.vb: Public Shared ReadOnly Property Instance As ServicesContainer
  overload: Model.Utilities.ServicesContainer.Instance*
- uid: Model.Utilities.ServicesContainer.GetService``1
  commentId: M:Model.Utilities.ServicesContainer.GetService``1
  id: GetService``1
  parent: Model.Utilities.ServicesContainer
  langs:
  - csharp
  - vb
  name: GetService<TService>()
  nameWithType: ServicesContainer.GetService<TService>()
  fullName: Model.Utilities.ServicesContainer.GetService<TService>()
  type: Method
  source:
    remote:
      path: Model/Utilities/ServicesContainer.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: GetService
    path: ../Model/Utilities/ServicesContainer.cs
    startLine: 96
  assemblies:
  - Model
  namespace: Model.Utilities
  summary: Retrieves a service instance of the specified type.
  remarks: >-
    This method creates a new instance of the requested service each time it's called.

    If the service is not registered, an exception is thrown with a clear error message.


    Note that this implementation doesn't handle dependency relationships between services;

    each service is instantiated independently. For services that require other services,

    those dependencies would need to be resolved manually within the service constructors

    by calling GetService again.
  example: []
  syntax:
    content: 'public TService GetService<TService>() where TService : class'
    typeParameters:
    - id: TService
      description: The type of service to retrieve.
    return:
      type: '{TService}'
      description: A new instance of the requested service.
    content.vb: Public Function GetService(Of TService As Class)() As TService
  overload: Model.Utilities.ServicesContainer.GetService*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when the requested service type is not registered in the container.
  nameWithType.vb: ServicesContainer.GetService(Of TService)()
  fullName.vb: Model.Utilities.ServicesContainer.GetService(Of TService)()
  name.vb: GetService(Of TService)()
references:
- uid: Model.Utilities
  commentId: N:Model.Utilities
  href: Model.html
  name: Model.Utilities
  nameWithType: Model.Utilities
  fullName: Model.Utilities
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Utilities
    name: Utilities
    href: Model.Utilities.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Utilities
    name: Utilities
    href: Model.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Utilities.ServicesContainer.Instance*
  commentId: Overload:Model.Utilities.ServicesContainer.Instance
  href: Model.Utilities.ServicesContainer.html#Model_Utilities_ServicesContainer_Instance
  name: Instance
  nameWithType: ServicesContainer.Instance
  fullName: Model.Utilities.ServicesContainer.Instance
- uid: Model.Utilities.ServicesContainer
  commentId: T:Model.Utilities.ServicesContainer
  parent: Model.Utilities
  href: Model.Utilities.ServicesContainer.html
  name: ServicesContainer
  nameWithType: ServicesContainer
  fullName: Model.Utilities.ServicesContainer
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Model.Utilities.ServicesContainer.GetService*
  commentId: Overload:Model.Utilities.ServicesContainer.GetService
  href: Model.Utilities.ServicesContainer.html#Model_Utilities_ServicesContainer_GetService__1
  name: GetService
  nameWithType: ServicesContainer.GetService
  fullName: Model.Utilities.ServicesContainer.GetService
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  commentId: '!:TService'
  name: TService
  nameWithType: TService
  fullName: TService
shouldSkipMarkup: true
