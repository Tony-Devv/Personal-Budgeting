### YamlMime:ManagedReference
items:
- uid: Model.Repositories.BudgetRepository
  commentId: T:Model.Repositories.BudgetRepository
  id: BudgetRepository
  parent: Model.Repositories
  children:
  - Model.Repositories.BudgetRepository.GetBudgetByName(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: BudgetRepository
  nameWithType: BudgetRepository
  fullName: Model.Repositories.BudgetRepository
  type: Class
  source:
    remote:
      path: Model/Repositories/BudgetRepository.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: BudgetRepository
    path: ../Model/Repositories/BudgetRepository.cs
    startLine: 10
  assemblies:
  - Model
  namespace: Model.Repositories
  summary: >-
    Repository class responsible for performing CRUD operations on <xref href="Model.Entities.Budget" data-throw-if-not-resolved="false"></xref> entities.

    Inherits from <xref href="Model.Repositories.GenericRepository%601" data-throw-if-not-resolved="false"></xref> and implements <xref href="Model.Interfaces.IBudgetRepository" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class BudgetRepository : GenericRepository<Budget>, IBudgetRepository, IRepository<Budget>'
    content.vb: Public Class BudgetRepository Inherits GenericRepository(Of Budget) Implements IBudgetRepository, IRepository(Of Budget)
  inheritance:
  - System.Object
  - Model.Repositories.GenericRepository{Model.Entities.Budget}
  implements:
  - Model.Interfaces.IBudgetRepository
  - Model.Interfaces.IRepository{Model.Entities.Budget}
  inheritedMembers:
  - Model.Repositories.GenericRepository{Model.Entities.Budget}._dbContextFactory
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.Add(Model.Entities.Budget)
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.Update(Model.Entities.Budget)
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.Delete(Model.Entities.Budget)
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.GetById(System.Int32)
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.GetAll
  - Model.Repositories.GenericRepository{Model.Entities.Budget}.CheckExist(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Repositories.BudgetRepository.GetBudgetByName(System.Int32,System.String)
  commentId: M:Model.Repositories.BudgetRepository.GetBudgetByName(System.Int32,System.String)
  id: GetBudgetByName(System.Int32,System.String)
  parent: Model.Repositories.BudgetRepository
  langs:
  - csharp
  - vb
  name: GetBudgetByName(int, string)
  nameWithType: BudgetRepository.GetBudgetByName(int, string)
  fullName: Model.Repositories.BudgetRepository.GetBudgetByName(int, string)
  type: Method
  source:
    remote:
      path: Model/Repositories/BudgetRepository.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: GetBudgetByName
    path: ../Model/Repositories/BudgetRepository.cs
    startLine: 14
  assemblies:
  - Model
  namespace: Model.Repositories
  summary: Provides data access methods specific to budgets, extending the generic repository for <xref href="Model.Entities.Budget" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<Budget?> GetBudgetByName(int userId, string budgetName)
    parameters:
    - id: userId
      type: System.Int32
    - id: budgetName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Model.Entities.Budget}
    content.vb: Public Function GetBudgetByName(userId As Integer, budgetName As String) As Task(Of Budget)
  overload: Model.Repositories.BudgetRepository.GetBudgetByName*
  implements:
  - Model.Interfaces.IBudgetRepository.GetBudgetByName(System.Int32,System.String)
  nameWithType.vb: BudgetRepository.GetBudgetByName(Integer, String)
  fullName.vb: Model.Repositories.BudgetRepository.GetBudgetByName(Integer, String)
  name.vb: GetBudgetByName(Integer, String)
references:
- uid: Model.Entities.Budget
  commentId: T:Model.Entities.Budget
  parent: Model.Entities
  href: Model.Entities.Budget.html
  name: Budget
  nameWithType: Budget
  fullName: Model.Entities.Budget
- uid: Model.Repositories.GenericRepository`1
  commentId: T:Model.Repositories.GenericRepository`1
  href: Model.Repositories.GenericRepository-1.html
  name: GenericRepository<TObject>
  nameWithType: GenericRepository<TObject>
  fullName: Model.Repositories.GenericRepository<TObject>
  nameWithType.vb: GenericRepository(Of TObject)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject)
  name.vb: GenericRepository(Of TObject)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1
    name: GenericRepository
    href: Model.Repositories.GenericRepository-1.html
  - name: <
  - name: TObject
  - name: '>'
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1
    name: GenericRepository
    href: Model.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: )
- uid: Model.Interfaces.IBudgetRepository
  commentId: T:Model.Interfaces.IBudgetRepository
  parent: Model.Interfaces
  href: Model.Interfaces.IBudgetRepository.html
  name: IBudgetRepository
  nameWithType: IBudgetRepository
  fullName: Model.Interfaces.IBudgetRepository
- uid: Model.Repositories
  commentId: N:Model.Repositories
  href: Model.html
  name: Model.Repositories
  nameWithType: Model.Repositories
  fullName: Model.Repositories
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Repositories
    name: Repositories
    href: Model.Repositories.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Repositories
    name: Repositories
    href: Model.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}
  commentId: T:Model.Repositories.GenericRepository{Model.Entities.Budget}
  parent: Model.Repositories
  definition: Model.Repositories.GenericRepository`1
  href: Model.Repositories.GenericRepository-1.html
  name: GenericRepository<Budget>
  nameWithType: GenericRepository<Budget>
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>
  nameWithType.vb: GenericRepository(Of Budget)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget)
  name.vb: GenericRepository(Of Budget)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1
    name: GenericRepository
    href: Model.Repositories.GenericRepository-1.html
  - name: <
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: '>'
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1
    name: GenericRepository
    href: Model.Repositories.GenericRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Interfaces.IRepository{Model.Entities.Budget}
  commentId: T:Model.Interfaces.IRepository{Model.Entities.Budget}
  parent: Model.Interfaces
  definition: Model.Interfaces.IRepository`1
  href: Model.Interfaces.IRepository-1.html
  name: IRepository<Budget>
  nameWithType: IRepository<Budget>
  fullName: Model.Interfaces.IRepository<Model.Entities.Budget>
  nameWithType.vb: IRepository(Of Budget)
  fullName.vb: Model.Interfaces.IRepository(Of Model.Entities.Budget)
  name.vb: IRepository(Of Budget)
  spec.csharp:
  - uid: Model.Interfaces.IRepository`1
    name: IRepository
    href: Model.Interfaces.IRepository-1.html
  - name: <
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: '>'
  spec.vb:
  - uid: Model.Interfaces.IRepository`1
    name: IRepository
    href: Model.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}._dbContextFactory
  commentId: F:Model.Repositories.GenericRepository{Model.Entities.Budget}._dbContextFactory
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1._dbContextFactory
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1__dbContextFactory
  name: _dbContextFactory
  nameWithType: GenericRepository<Budget>._dbContextFactory
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>._dbContextFactory
  nameWithType.vb: GenericRepository(Of Budget)._dbContextFactory
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget)._dbContextFactory
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Add(Model.Entities.Budget)
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.Add(Model.Entities.Budget)
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.Add(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  name: Add(Budget)
  nameWithType: GenericRepository<Budget>.Add(Budget)
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.Add(Model.Entities.Budget)
  nameWithType.vb: GenericRepository(Of Budget).Add(Budget)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).Add(Model.Entities.Budget)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Add(Model.Entities.Budget)
    name: Add
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Add(Model.Entities.Budget)
    name: Add
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Update(Model.Entities.Budget)
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.Update(Model.Entities.Budget)
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.Update(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  name: Update(Budget)
  nameWithType: GenericRepository<Budget>.Update(Budget)
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.Update(Model.Entities.Budget)
  nameWithType.vb: GenericRepository(Of Budget).Update(Budget)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).Update(Model.Entities.Budget)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Update(Model.Entities.Budget)
    name: Update
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Update(Model.Entities.Budget)
    name: Update
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Delete(Model.Entities.Budget)
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.Delete(Model.Entities.Budget)
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.Delete(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  name: Delete(Budget)
  nameWithType: GenericRepository<Budget>.Delete(Budget)
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.Delete(Model.Entities.Budget)
  nameWithType.vb: GenericRepository(Of Budget).Delete(Budget)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).Delete(Model.Entities.Budget)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Delete(Model.Entities.Budget)
    name: Delete
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.Delete(Model.Entities.Budget)
    name: Delete
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  - name: (
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetById(System.Int32)
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.GetById(System.Int32)
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.GetById(System.Int32)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  name: GetById(int)
  nameWithType: GenericRepository<Budget>.GetById(int)
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.GetById(int)
  nameWithType.vb: GenericRepository(Of Budget).GetById(Integer)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).GetById(Integer)
  name.vb: GetById(Integer)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetById(System.Int32)
    name: GetById
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetById(System.Int32)
    name: GetById
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetAll
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.GetAll
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.GetAll
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  name: GetAll()
  nameWithType: GenericRepository<Budget>.GetAll()
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.GetAll()
  nameWithType.vb: GenericRepository(Of Budget).GetAll()
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).GetAll()
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetAll
    name: GetAll
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  - name: (
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.GetAll
    name: GetAll
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  - name: (
  - name: )
- uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.CheckExist(System.Int32)
  commentId: M:Model.Repositories.GenericRepository{Model.Entities.Budget}.CheckExist(System.Int32)
  parent: Model.Repositories.GenericRepository{Model.Entities.Budget}
  definition: Model.Repositories.GenericRepository`1.CheckExist(System.Int32)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  name: CheckExist(int)
  nameWithType: GenericRepository<Budget>.CheckExist(int)
  fullName: Model.Repositories.GenericRepository<Model.Entities.Budget>.CheckExist(int)
  nameWithType.vb: GenericRepository(Of Budget).CheckExist(Integer)
  fullName.vb: Model.Repositories.GenericRepository(Of Model.Entities.Budget).CheckExist(Integer)
  name.vb: CheckExist(Integer)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.CheckExist(System.Int32)
    name: CheckExist
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository{Model.Entities.Budget}.CheckExist(System.Int32)
    name: CheckExist
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Model.Entities
  commentId: N:Model.Entities
  href: Model.html
  name: Model.Entities
  nameWithType: Model.Entities
  fullName: Model.Entities
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
- uid: Model.Interfaces
  commentId: N:Model.Interfaces
  href: Model.html
  name: Model.Interfaces
  nameWithType: Model.Interfaces
  fullName: Model.Interfaces
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Interfaces
    name: Interfaces
    href: Model.Interfaces.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Interfaces
    name: Interfaces
    href: Model.Interfaces.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Interfaces.IRepository`1
  commentId: T:Model.Interfaces.IRepository`1
  href: Model.Interfaces.IRepository-1.html
  name: IRepository<TObject>
  nameWithType: IRepository<TObject>
  fullName: Model.Interfaces.IRepository<TObject>
  nameWithType.vb: IRepository(Of TObject)
  fullName.vb: Model.Interfaces.IRepository(Of TObject)
  name.vb: IRepository(Of TObject)
  spec.csharp:
  - uid: Model.Interfaces.IRepository`1
    name: IRepository
    href: Model.Interfaces.IRepository-1.html
  - name: <
  - name: TObject
  - name: '>'
  spec.vb:
  - uid: Model.Interfaces.IRepository`1
    name: IRepository
    href: Model.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: )
- uid: Model.Repositories.GenericRepository`1._dbContextFactory
  commentId: F:Model.Repositories.GenericRepository`1._dbContextFactory
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1__dbContextFactory
  name: _dbContextFactory
  nameWithType: GenericRepository<TObject>._dbContextFactory
  fullName: Model.Repositories.GenericRepository<TObject>._dbContextFactory
  nameWithType.vb: GenericRepository(Of TObject)._dbContextFactory
  fullName.vb: Model.Repositories.GenericRepository(Of TObject)._dbContextFactory
- uid: Model.Repositories.GenericRepository`1.Add(`0)
  commentId: M:Model.Repositories.GenericRepository`1.Add(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  name: Add(TObject)
  nameWithType: GenericRepository<TObject>.Add(TObject)
  fullName: Model.Repositories.GenericRepository<TObject>.Add(TObject)
  nameWithType.vb: GenericRepository(Of TObject).Add(TObject)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).Add(TObject)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.Add(`0)
    name: Add
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  - name: (
  - name: TObject
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.Add(`0)
    name: Add
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Add__0_
  - name: (
  - name: TObject
  - name: )
- uid: Model.Repositories.GenericRepository`1.Update(`0)
  commentId: M:Model.Repositories.GenericRepository`1.Update(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  name: Update(TObject)
  nameWithType: GenericRepository<TObject>.Update(TObject)
  fullName: Model.Repositories.GenericRepository<TObject>.Update(TObject)
  nameWithType.vb: GenericRepository(Of TObject).Update(TObject)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).Update(TObject)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: TObject
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.Update(`0)
    name: Update
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Update__0_
  - name: (
  - name: TObject
  - name: )
- uid: Model.Repositories.GenericRepository`1.Delete(`0)
  commentId: M:Model.Repositories.GenericRepository`1.Delete(`0)
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  name: Delete(TObject)
  nameWithType: GenericRepository<TObject>.Delete(TObject)
  fullName: Model.Repositories.GenericRepository<TObject>.Delete(TObject)
  nameWithType.vb: GenericRepository(Of TObject).Delete(TObject)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).Delete(TObject)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.Delete(`0)
    name: Delete
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  - name: (
  - name: TObject
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.Delete(`0)
    name: Delete
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_Delete__0_
  - name: (
  - name: TObject
  - name: )
- uid: Model.Repositories.GenericRepository`1.GetById(System.Int32)
  commentId: M:Model.Repositories.GenericRepository`1.GetById(System.Int32)
  isExternal: true
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  name: GetById(int)
  nameWithType: GenericRepository<TObject>.GetById(int)
  fullName: Model.Repositories.GenericRepository<TObject>.GetById(int)
  nameWithType.vb: GenericRepository(Of TObject).GetById(Integer)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).GetById(Integer)
  name.vb: GetById(Integer)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.GetById(System.Int32)
    name: GetById
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.GetById(System.Int32)
    name: GetById
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetById_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Repositories.GenericRepository`1.GetAll
  commentId: M:Model.Repositories.GenericRepository`1.GetAll
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  name: GetAll()
  nameWithType: GenericRepository<TObject>.GetAll()
  fullName: Model.Repositories.GenericRepository<TObject>.GetAll()
  nameWithType.vb: GenericRepository(Of TObject).GetAll()
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).GetAll()
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.GetAll
    name: GetAll
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  - name: (
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.GetAll
    name: GetAll
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_GetAll
  - name: (
  - name: )
- uid: Model.Repositories.GenericRepository`1.CheckExist(System.Int32)
  commentId: M:Model.Repositories.GenericRepository`1.CheckExist(System.Int32)
  isExternal: true
  href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  name: CheckExist(int)
  nameWithType: GenericRepository<TObject>.CheckExist(int)
  fullName: Model.Repositories.GenericRepository<TObject>.CheckExist(int)
  nameWithType.vb: GenericRepository(Of TObject).CheckExist(Integer)
  fullName.vb: Model.Repositories.GenericRepository(Of TObject).CheckExist(Integer)
  name.vb: CheckExist(Integer)
  spec.csharp:
  - uid: Model.Repositories.GenericRepository`1.CheckExist(System.Int32)
    name: CheckExist
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Model.Repositories.GenericRepository`1.CheckExist(System.Int32)
    name: CheckExist
    href: Model.Repositories.GenericRepository-1.html#Model_Repositories_GenericRepository_1_CheckExist_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Repositories.BudgetRepository.GetBudgetByName*
  commentId: Overload:Model.Repositories.BudgetRepository.GetBudgetByName
  href: Model.Repositories.BudgetRepository.html#Model_Repositories_BudgetRepository_GetBudgetByName_System_Int32_System_String_
  name: GetBudgetByName
  nameWithType: BudgetRepository.GetBudgetByName
  fullName: Model.Repositories.BudgetRepository.GetBudgetByName
- uid: Model.Interfaces.IBudgetRepository.GetBudgetByName(System.Int32,System.String)
  commentId: M:Model.Interfaces.IBudgetRepository.GetBudgetByName(System.Int32,System.String)
  parent: Model.Interfaces.IBudgetRepository
  isExternal: true
  href: Model.Interfaces.IBudgetRepository.html#Model_Interfaces_IBudgetRepository_GetBudgetByName_System_Int32_System_String_
  name: GetBudgetByName(int, string)
  nameWithType: IBudgetRepository.GetBudgetByName(int, string)
  fullName: Model.Interfaces.IBudgetRepository.GetBudgetByName(int, string)
  nameWithType.vb: IBudgetRepository.GetBudgetByName(Integer, String)
  fullName.vb: Model.Interfaces.IBudgetRepository.GetBudgetByName(Integer, String)
  name.vb: GetBudgetByName(Integer, String)
  spec.csharp:
  - uid: Model.Interfaces.IBudgetRepository.GetBudgetByName(System.Int32,System.String)
    name: GetBudgetByName
    href: Model.Interfaces.IBudgetRepository.html#Model_Interfaces_IBudgetRepository_GetBudgetByName_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Model.Interfaces.IBudgetRepository.GetBudgetByName(System.Int32,System.String)
    name: GetBudgetByName
    href: Model.Interfaces.IBudgetRepository.html#Model_Interfaces_IBudgetRepository_GetBudgetByName_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Model.Entities.Budget}
  commentId: T:System.Threading.Tasks.Task{Model.Entities.Budget}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Budget>
  nameWithType: Task<Budget>
  fullName: System.Threading.Tasks.Task<Model.Entities.Budget>
  nameWithType.vb: Task(Of Budget)
  fullName.vb: System.Threading.Tasks.Task(Of Model.Entities.Budget)
  name.vb: Task(Of Budget)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
shouldSkipMarkup: true
