### YamlMime:ManagedReference
items:
- uid: Model.Interfaces.IPasswordHasher
  commentId: T:Model.Interfaces.IPasswordHasher
  id: IPasswordHasher
  parent: Model.Interfaces
  children:
  - Model.Interfaces.IPasswordHasher.Hash(System.String)
  - Model.Interfaces.IPasswordHasher.Verify(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IPasswordHasher
  nameWithType: IPasswordHasher
  fullName: Model.Interfaces.IPasswordHasher
  type: Interface
  source:
    remote:
      path: Model/Interfaces/IPasswordHasher.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: IPasswordHasher
    path: ../Model/Interfaces/IPasswordHasher.cs
    startLine: 5
  assemblies:
  - Model
  namespace: Model.Interfaces
  summary: Defines methods for hashing and verifying passwords.
  example: []
  syntax:
    content: public interface IPasswordHasher
    content.vb: Public Interface IPasswordHasher
- uid: Model.Interfaces.IPasswordHasher.Hash(System.String)
  commentId: M:Model.Interfaces.IPasswordHasher.Hash(System.String)
  id: Hash(System.String)
  parent: Model.Interfaces.IPasswordHasher
  langs:
  - csharp
  - vb
  name: Hash(string)
  nameWithType: IPasswordHasher.Hash(string)
  fullName: Model.Interfaces.IPasswordHasher.Hash(string)
  type: Method
  source:
    remote:
      path: Model/Interfaces/IPasswordHasher.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: Hash
    path: ../Model/Interfaces/IPasswordHasher.cs
    startLine: 12
  assemblies:
  - Model
  namespace: Model.Interfaces
  summary: Hashes the provided plain text password.
  example: []
  syntax:
    content: Task<string> Hash(string plainText)
    parameters:
    - id: plainText
      type: System.String
      description: The plain text password to hash.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A task that returns the hashed password as a string.
    content.vb: Function Hash(plainText As String) As Task(Of String)
  overload: Model.Interfaces.IPasswordHasher.Hash*
  nameWithType.vb: IPasswordHasher.Hash(String)
  fullName.vb: Model.Interfaces.IPasswordHasher.Hash(String)
  name.vb: Hash(String)
- uid: Model.Interfaces.IPasswordHasher.Verify(System.String,System.String)
  commentId: M:Model.Interfaces.IPasswordHasher.Verify(System.String,System.String)
  id: Verify(System.String,System.String)
  parent: Model.Interfaces.IPasswordHasher
  langs:
  - csharp
  - vb
  name: Verify(string, string)
  nameWithType: IPasswordHasher.Verify(string, string)
  fullName: Model.Interfaces.IPasswordHasher.Verify(string, string)
  type: Method
  source:
    remote:
      path: Model/Interfaces/IPasswordHasher.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: Verify
    path: ../Model/Interfaces/IPasswordHasher.cs
    startLine: 20
  assemblies:
  - Model
  namespace: Model.Interfaces
  summary: Verifies if the provided plain text password matches the hashed password.
  example: []
  syntax:
    content: Task<bool> Verify(string hashedPassword, string plainTextPassword)
    parameters:
    - id: hashedPassword
      type: System.String
      description: The hashed password to compare against.
    - id: plainTextPassword
      type: System.String
      description: The plain text password to verify.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that returns true if the passwords match; otherwise, false.
    content.vb: Function Verify(hashedPassword As String, plainTextPassword As String) As Task(Of Boolean)
  overload: Model.Interfaces.IPasswordHasher.Verify*
  nameWithType.vb: IPasswordHasher.Verify(String, String)
  fullName.vb: Model.Interfaces.IPasswordHasher.Verify(String, String)
  name.vb: Verify(String, String)
references:
- uid: Model.Interfaces
  commentId: N:Model.Interfaces
  href: Model.html
  name: Model.Interfaces
  nameWithType: Model.Interfaces
  fullName: Model.Interfaces
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Interfaces
    name: Interfaces
    href: Model.Interfaces.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Interfaces
    name: Interfaces
    href: Model.Interfaces.html
- uid: Model.Interfaces.IPasswordHasher.Hash*
  commentId: Overload:Model.Interfaces.IPasswordHasher.Hash
  href: Model.Interfaces.IPasswordHasher.html#Model_Interfaces_IPasswordHasher_Hash_System_String_
  name: Hash
  nameWithType: IPasswordHasher.Hash
  fullName: Model.Interfaces.IPasswordHasher.Hash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Model.Interfaces.IPasswordHasher.Verify*
  commentId: Overload:Model.Interfaces.IPasswordHasher.Verify
  href: Model.Interfaces.IPasswordHasher.html#Model_Interfaces_IPasswordHasher_Verify_System_String_System_String_
  name: Verify
  nameWithType: IPasswordHasher.Verify
  fullName: Model.Interfaces.IPasswordHasher.Verify
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
shouldSkipMarkup: true
