### YamlMime:ManagedReference
items:
- uid: Model.Handlers.BudgetHandler
  commentId: T:Model.Handlers.BudgetHandler
  id: BudgetHandler
  parent: Model.Handlers
  children:
  - Model.Handlers.BudgetHandler.#ctor
  - Model.Handlers.BudgetHandler.AddNewBudget(Model.Entities.Budget)
  - Model.Handlers.BudgetHandler.DeleteBudget(Model.Entities.Budget)
  - Model.Handlers.BudgetHandler.GetBudgetByName(System.Int32,System.String)
  - Model.Handlers.BudgetHandler.UpdateBudget(Model.Entities.Budget)
  langs:
  - csharp
  - vb
  name: BudgetHandler
  nameWithType: BudgetHandler
  fullName: Model.Handlers.BudgetHandler
  type: Class
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: BudgetHandler
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 9
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Handler class responsible for managing budget-related operations such as adding, deleting, updating, and retrieving budgets.
  example: []
  syntax:
    content: public class BudgetHandler
    content.vb: Public Class BudgetHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Handlers.BudgetHandler.#ctor
  commentId: M:Model.Handlers.BudgetHandler.#ctor
  id: '#ctor'
  parent: Model.Handlers.BudgetHandler
  langs:
  - csharp
  - vb
  name: BudgetHandler()
  nameWithType: BudgetHandler.BudgetHandler()
  fullName: Model.Handlers.BudgetHandler.BudgetHandler()
  type: Constructor
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: .ctor
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 16
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Initializes a new instance of the <xref href="Model.Handlers.BudgetHandler" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BudgetHandler()
    content.vb: Public Sub New()
  overload: Model.Handlers.BudgetHandler.#ctor*
  nameWithType.vb: BudgetHandler.New()
  fullName.vb: Model.Handlers.BudgetHandler.New()
  name.vb: New()
- uid: Model.Handlers.BudgetHandler.AddNewBudget(Model.Entities.Budget)
  commentId: M:Model.Handlers.BudgetHandler.AddNewBudget(Model.Entities.Budget)
  id: AddNewBudget(Model.Entities.Budget)
  parent: Model.Handlers.BudgetHandler
  langs:
  - csharp
  - vb
  name: AddNewBudget(Budget)
  nameWithType: BudgetHandler.AddNewBudget(Budget)
  fullName: Model.Handlers.BudgetHandler.AddNewBudget(Model.Entities.Budget)
  type: Method
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: AddNewBudget
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 28
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Adds a new budget record to the repository.
  example: []
  syntax:
    content: public Task<int> AddNewBudget(Budget budget)
    parameters:
    - id: budget
      type: Model.Entities.Budget
      description: The budget to be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A Task&lt;int&gt; representing the asynchronous operation. The task result is the ID of the added budget.
    content.vb: Public Function AddNewBudget(budget As Budget) As Task(Of Integer)
  overload: Model.Handlers.BudgetHandler.AddNewBudget*
- uid: Model.Handlers.BudgetHandler.DeleteBudget(Model.Entities.Budget)
  commentId: M:Model.Handlers.BudgetHandler.DeleteBudget(Model.Entities.Budget)
  id: DeleteBudget(Model.Entities.Budget)
  parent: Model.Handlers.BudgetHandler
  langs:
  - csharp
  - vb
  name: DeleteBudget(Budget)
  nameWithType: BudgetHandler.DeleteBudget(Budget)
  fullName: Model.Handlers.BudgetHandler.DeleteBudget(Model.Entities.Budget)
  type: Method
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: DeleteBudget
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 50
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Deletes a budget record from the repository.
  example: []
  syntax:
    content: public Task<int> DeleteBudget(Budget budget)
    parameters:
    - id: budget
      type: Model.Entities.Budget
      description: The budget to be deleted.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        A Task&lt;int&gt; representing the asynchronous operation. The task result is the ID of the deleted budget,

        or <code>-1</code> if the budget does not exist.
    content.vb: Public Function DeleteBudget(budget As Budget) As Task(Of Integer)
  overload: Model.Handlers.BudgetHandler.DeleteBudget*
- uid: Model.Handlers.BudgetHandler.GetBudgetByName(System.Int32,System.String)
  commentId: M:Model.Handlers.BudgetHandler.GetBudgetByName(System.Int32,System.String)
  id: GetBudgetByName(System.Int32,System.String)
  parent: Model.Handlers.BudgetHandler
  langs:
  - csharp
  - vb
  name: GetBudgetByName(int, string)
  nameWithType: BudgetHandler.GetBudgetByName(int, string)
  fullName: Model.Handlers.BudgetHandler.GetBudgetByName(int, string)
  type: Method
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: GetBudgetByName
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 75
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Retrieves a budget record by its name.
  example: []
  syntax:
    content: public Task<Budget?> GetBudgetByName(int userId, string budgetName)
    parameters:
    - id: userId
      type: System.Int32
      description: The user ID whose budget is being retrieved.
    - id: budgetName
      type: System.String
      description: The name of the budget to retrieve.
    return:
      type: System.Threading.Tasks.Task{Model.Entities.Budget}
      description: >-
        A Task&lt;Budget?&gt; representing the asynchronous operation. The task result is the budget found, or <code>null</code> 

        if no budget with the specified name exists.
    content.vb: Public Function GetBudgetByName(userId As Integer, budgetName As String) As Task(Of Budget)
  overload: Model.Handlers.BudgetHandler.GetBudgetByName*
  nameWithType.vb: BudgetHandler.GetBudgetByName(Integer, String)
  fullName.vb: Model.Handlers.BudgetHandler.GetBudgetByName(Integer, String)
  name.vb: GetBudgetByName(Integer, String)
- uid: Model.Handlers.BudgetHandler.UpdateBudget(Model.Entities.Budget)
  commentId: M:Model.Handlers.BudgetHandler.UpdateBudget(Model.Entities.Budget)
  id: UpdateBudget(Model.Entities.Budget)
  parent: Model.Handlers.BudgetHandler
  langs:
  - csharp
  - vb
  name: UpdateBudget(Budget)
  nameWithType: BudgetHandler.UpdateBudget(Budget)
  fullName: Model.Handlers.BudgetHandler.UpdateBudget(Model.Entities.Budget)
  type: Method
  source:
    remote:
      path: Model/Handlers/BudgetHandler.cs
      branch: ConsoleApplication
      repo: https://github.com/Tony-Devv/Personal-Budgeting.git
    id: UpdateBudget
    path: ../Model/Handlers/BudgetHandler.cs
    startLine: 96
  assemblies:
  - Model
  namespace: Model.Handlers
  summary: Updates an existing budget record with new values.
  example: []
  syntax:
    content: public Task<Budget?> UpdateBudget(Budget newValues)
    parameters:
    - id: newValues
      type: Model.Entities.Budget
      description: The new values for the budget.
    return:
      type: System.Threading.Tasks.Task{Model.Entities.Budget}
      description: >-
        A Task&lt;Budget?&gt; representing the asynchronous operation. The task result is the updated budget, 

        or <code>null</code> if the budget could not be found or updated.
    content.vb: Public Function UpdateBudget(newValues As Budget) As Task(Of Budget)
  overload: Model.Handlers.BudgetHandler.UpdateBudget*
references:
- uid: Model.Handlers
  commentId: N:Model.Handlers
  href: Model.html
  name: Model.Handlers
  nameWithType: Model.Handlers
  fullName: Model.Handlers
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Handlers
    name: Handlers
    href: Model.Handlers.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Handlers
    name: Handlers
    href: Model.Handlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Handlers.BudgetHandler
  commentId: T:Model.Handlers.BudgetHandler
  href: Model.Handlers.BudgetHandler.html
  name: BudgetHandler
  nameWithType: BudgetHandler
  fullName: Model.Handlers.BudgetHandler
- uid: Model.Handlers.BudgetHandler.#ctor*
  commentId: Overload:Model.Handlers.BudgetHandler.#ctor
  href: Model.Handlers.BudgetHandler.html#Model_Handlers_BudgetHandler__ctor
  name: BudgetHandler
  nameWithType: BudgetHandler.BudgetHandler
  fullName: Model.Handlers.BudgetHandler.BudgetHandler
  nameWithType.vb: BudgetHandler.New
  fullName.vb: Model.Handlers.BudgetHandler.New
  name.vb: New
- uid: Model.Handlers.BudgetHandler.AddNewBudget*
  commentId: Overload:Model.Handlers.BudgetHandler.AddNewBudget
  href: Model.Handlers.BudgetHandler.html#Model_Handlers_BudgetHandler_AddNewBudget_Model_Entities_Budget_
  name: AddNewBudget
  nameWithType: BudgetHandler.AddNewBudget
  fullName: Model.Handlers.BudgetHandler.AddNewBudget
- uid: Model.Entities.Budget
  commentId: T:Model.Entities.Budget
  parent: Model.Entities
  href: Model.Entities.Budget.html
  name: Budget
  nameWithType: Budget
  fullName: Model.Entities.Budget
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Entities
  commentId: N:Model.Entities
  href: Model.html
  name: Model.Entities
  nameWithType: Model.Entities
  fullName: Model.Entities
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Model.Handlers.BudgetHandler.DeleteBudget*
  commentId: Overload:Model.Handlers.BudgetHandler.DeleteBudget
  href: Model.Handlers.BudgetHandler.html#Model_Handlers_BudgetHandler_DeleteBudget_Model_Entities_Budget_
  name: DeleteBudget
  nameWithType: BudgetHandler.DeleteBudget
  fullName: Model.Handlers.BudgetHandler.DeleteBudget
- uid: Model.Handlers.BudgetHandler.GetBudgetByName*
  commentId: Overload:Model.Handlers.BudgetHandler.GetBudgetByName
  href: Model.Handlers.BudgetHandler.html#Model_Handlers_BudgetHandler_GetBudgetByName_System_Int32_System_String_
  name: GetBudgetByName
  nameWithType: BudgetHandler.GetBudgetByName
  fullName: Model.Handlers.BudgetHandler.GetBudgetByName
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Model.Entities.Budget}
  commentId: T:System.Threading.Tasks.Task{Model.Entities.Budget}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Budget>
  nameWithType: Task<Budget>
  fullName: System.Threading.Tasks.Task<Model.Entities.Budget>
  nameWithType.vb: Task(Of Budget)
  fullName.vb: System.Threading.Tasks.Task(Of Model.Entities.Budget)
  name.vb: Task(Of Budget)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Entities.Budget
    name: Budget
    href: Model.Entities.Budget.html
  - name: )
- uid: Model.Handlers.BudgetHandler.UpdateBudget*
  commentId: Overload:Model.Handlers.BudgetHandler.UpdateBudget
  href: Model.Handlers.BudgetHandler.html#Model_Handlers_BudgetHandler_UpdateBudget_Model_Entities_Budget_
  name: UpdateBudget
  nameWithType: BudgetHandler.UpdateBudget
  fullName: Model.Handlers.BudgetHandler.UpdateBudget
shouldSkipMarkup: true
